
Task_1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000518  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006ac  080006ac  00020098  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006ac  080006ac  00020098  2**0
                  CONTENTS
  4 .ARM          00000000  080006ac  080006ac  00020098  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006ac  080006ac  00020098  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006ac  080006ac  000106ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006b0  080006b0  000106b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000098  20000000  080006b4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000098  0800074c  00020098  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000b4  0800074c  000200b4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a2c  00000000  00000000  000200c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003d1  00000000  00000000  00020af4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00020ec8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000c0  00000000  00000000  00020fe0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000df8c  00000000  00000000  000210a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000113b  00000000  00000000  0002f02c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004ff40  00000000  00000000  00030167  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000800a7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002b4  00000000  00000000  000800f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000098 	.word	0x20000098
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000694 	.word	0x08000694

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	2000009c 	.word	0x2000009c
 80001d0:	08000694 	.word	0x08000694

080001d4 <GPIO_EnableClock>:

unsigned int *LOOKUP[2][5] =
{{GPIOA_MODER, GPIOA_OTYPER, GPIOA_PUPDR, GPIOA_IDR, GPIOA_ODR},
 {GPIOB_MODER, GPIOB_OTYPER, GPIOB_PUPDR,  GPIOB_IDR, GPIOB_ODR}};

void GPIO_EnableClock(unsigned char PortID) {
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]
     *RCC_AHB1ENR |= (0x01 << PortID);
 80001de:	4b08      	ldr	r3, [pc, #32]	; (8000200 <GPIO_EnableClock+0x2c>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	79fa      	ldrb	r2, [r7, #7]
 80001e4:	2101      	movs	r1, #1
 80001e6:	fa01 f202 	lsl.w	r2, r1, r2
 80001ea:	4611      	mov	r1, r2
 80001ec:	4a04      	ldr	r2, [pc, #16]	; (8000200 <GPIO_EnableClock+0x2c>)
 80001ee:	430b      	orrs	r3, r1
 80001f0:	6013      	str	r3, [r2, #0]
}
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	40023830 	.word	0x40023830

08000204 <GPIO_Init>:

void GPIO_Init(unsigned char PortID, unsigned char PinNum, unsigned char PinMode,
               unsigned char DefaultState) {
 8000204:	b490      	push	{r4, r7}
 8000206:	b082      	sub	sp, #8
 8000208:	af00      	add	r7, sp, #0
 800020a:	4604      	mov	r4, r0
 800020c:	4608      	mov	r0, r1
 800020e:	4611      	mov	r1, r2
 8000210:	461a      	mov	r2, r3
 8000212:	4623      	mov	r3, r4
 8000214:	71fb      	strb	r3, [r7, #7]
 8000216:	4603      	mov	r3, r0
 8000218:	71bb      	strb	r3, [r7, #6]
 800021a:	460b      	mov	r3, r1
 800021c:	717b      	strb	r3, [r7, #5]
 800021e:	4613      	mov	r3, r2
 8000220:	713b      	strb	r3, [r7, #4]
               
      *LOOKUP[PortID][0] &= ~(0x03 << 2 * PinNum);
 8000222:	79fa      	ldrb	r2, [r7, #7]
 8000224:	4956      	ldr	r1, [pc, #344]	; (8000380 <GPIO_Init+0x17c>)
 8000226:	4613      	mov	r3, r2
 8000228:	009b      	lsls	r3, r3, #2
 800022a:	4413      	add	r3, r2
 800022c:	009b      	lsls	r3, r3, #2
 800022e:	440b      	add	r3, r1
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	6819      	ldr	r1, [r3, #0]
 8000234:	79bb      	ldrb	r3, [r7, #6]
 8000236:	005b      	lsls	r3, r3, #1
 8000238:	2203      	movs	r2, #3
 800023a:	fa02 f303 	lsl.w	r3, r2, r3
 800023e:	43db      	mvns	r3, r3
 8000240:	461c      	mov	r4, r3
 8000242:	79fa      	ldrb	r2, [r7, #7]
 8000244:	484e      	ldr	r0, [pc, #312]	; (8000380 <GPIO_Init+0x17c>)
 8000246:	4613      	mov	r3, r2
 8000248:	009b      	lsls	r3, r3, #2
 800024a:	4413      	add	r3, r2
 800024c:	009b      	lsls	r3, r3, #2
 800024e:	4403      	add	r3, r0
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	ea01 0204 	and.w	r2, r1, r4
 8000256:	601a      	str	r2, [r3, #0]
      *LOOKUP[PortID][0] |= PinMode << 2 * PinNum;
 8000258:	79fa      	ldrb	r2, [r7, #7]
 800025a:	4949      	ldr	r1, [pc, #292]	; (8000380 <GPIO_Init+0x17c>)
 800025c:	4613      	mov	r3, r2
 800025e:	009b      	lsls	r3, r3, #2
 8000260:	4413      	add	r3, r2
 8000262:	009b      	lsls	r3, r3, #2
 8000264:	440b      	add	r3, r1
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	6819      	ldr	r1, [r3, #0]
 800026a:	797a      	ldrb	r2, [r7, #5]
 800026c:	79bb      	ldrb	r3, [r7, #6]
 800026e:	005b      	lsls	r3, r3, #1
 8000270:	fa02 f303 	lsl.w	r3, r2, r3
 8000274:	461c      	mov	r4, r3
 8000276:	79fa      	ldrb	r2, [r7, #7]
 8000278:	4841      	ldr	r0, [pc, #260]	; (8000380 <GPIO_Init+0x17c>)
 800027a:	4613      	mov	r3, r2
 800027c:	009b      	lsls	r3, r3, #2
 800027e:	4413      	add	r3, r2
 8000280:	009b      	lsls	r3, r3, #2
 8000282:	4403      	add	r3, r0
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	ea41 0204 	orr.w	r2, r1, r4
 800028a:	601a      	str	r2, [r3, #0]

      *LOOKUP[PortID][1] &= ~(1 << PinNum);
 800028c:	79fa      	ldrb	r2, [r7, #7]
 800028e:	493c      	ldr	r1, [pc, #240]	; (8000380 <GPIO_Init+0x17c>)
 8000290:	4613      	mov	r3, r2
 8000292:	009b      	lsls	r3, r3, #2
 8000294:	4413      	add	r3, r2
 8000296:	009b      	lsls	r3, r3, #2
 8000298:	440b      	add	r3, r1
 800029a:	3304      	adds	r3, #4
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	6819      	ldr	r1, [r3, #0]
 80002a0:	79bb      	ldrb	r3, [r7, #6]
 80002a2:	2201      	movs	r2, #1
 80002a4:	fa02 f303 	lsl.w	r3, r2, r3
 80002a8:	43db      	mvns	r3, r3
 80002aa:	461c      	mov	r4, r3
 80002ac:	79fa      	ldrb	r2, [r7, #7]
 80002ae:	4834      	ldr	r0, [pc, #208]	; (8000380 <GPIO_Init+0x17c>)
 80002b0:	4613      	mov	r3, r2
 80002b2:	009b      	lsls	r3, r3, #2
 80002b4:	4413      	add	r3, r2
 80002b6:	009b      	lsls	r3, r3, #2
 80002b8:	4403      	add	r3, r0
 80002ba:	3304      	adds	r3, #4
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	ea01 0204 	and.w	r2, r1, r4
 80002c2:	601a      	str	r2, [r3, #0]
      *LOOKUP[PortID][1] |= ((DefaultState & _OUTTYPE_MASK) >> _OUTTYPE_SHIFT) << PinNum;
 80002c4:	79fa      	ldrb	r2, [r7, #7]
 80002c6:	492e      	ldr	r1, [pc, #184]	; (8000380 <GPIO_Init+0x17c>)
 80002c8:	4613      	mov	r3, r2
 80002ca:	009b      	lsls	r3, r3, #2
 80002cc:	4413      	add	r3, r2
 80002ce:	009b      	lsls	r3, r3, #2
 80002d0:	440b      	add	r3, r1
 80002d2:	3304      	adds	r3, #4
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	6819      	ldr	r1, [r3, #0]
 80002d8:	793b      	ldrb	r3, [r7, #4]
 80002da:	f003 0201 	and.w	r2, r3, #1
 80002de:	79bb      	ldrb	r3, [r7, #6]
 80002e0:	fa02 f303 	lsl.w	r3, r2, r3
 80002e4:	461c      	mov	r4, r3
 80002e6:	79fa      	ldrb	r2, [r7, #7]
 80002e8:	4825      	ldr	r0, [pc, #148]	; (8000380 <GPIO_Init+0x17c>)
 80002ea:	4613      	mov	r3, r2
 80002ec:	009b      	lsls	r3, r3, #2
 80002ee:	4413      	add	r3, r2
 80002f0:	009b      	lsls	r3, r3, #2
 80002f2:	4403      	add	r3, r0
 80002f4:	3304      	adds	r3, #4
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	ea41 0204 	orr.w	r2, r1, r4
 80002fc:	601a      	str	r2, [r3, #0]

      *LOOKUP[PortID][2] &= ~(0x03 << 2 * PinNum);
 80002fe:	79fa      	ldrb	r2, [r7, #7]
 8000300:	491f      	ldr	r1, [pc, #124]	; (8000380 <GPIO_Init+0x17c>)
 8000302:	4613      	mov	r3, r2
 8000304:	009b      	lsls	r3, r3, #2
 8000306:	4413      	add	r3, r2
 8000308:	009b      	lsls	r3, r3, #2
 800030a:	440b      	add	r3, r1
 800030c:	3308      	adds	r3, #8
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	6819      	ldr	r1, [r3, #0]
 8000312:	79bb      	ldrb	r3, [r7, #6]
 8000314:	005b      	lsls	r3, r3, #1
 8000316:	2203      	movs	r2, #3
 8000318:	fa02 f303 	lsl.w	r3, r2, r3
 800031c:	43db      	mvns	r3, r3
 800031e:	461c      	mov	r4, r3
 8000320:	79fa      	ldrb	r2, [r7, #7]
 8000322:	4817      	ldr	r0, [pc, #92]	; (8000380 <GPIO_Init+0x17c>)
 8000324:	4613      	mov	r3, r2
 8000326:	009b      	lsls	r3, r3, #2
 8000328:	4413      	add	r3, r2
 800032a:	009b      	lsls	r3, r3, #2
 800032c:	4403      	add	r3, r0
 800032e:	3308      	adds	r3, #8
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	ea01 0204 	and.w	r2, r1, r4
 8000336:	601a      	str	r2, [r3, #0]
      *LOOKUP[PortID][2] |= ((DefaultState & _PUPD_MASK) >> _PUPD_SHIFT) << (2 * PinNum); 
 8000338:	79fa      	ldrb	r2, [r7, #7]
 800033a:	4911      	ldr	r1, [pc, #68]	; (8000380 <GPIO_Init+0x17c>)
 800033c:	4613      	mov	r3, r2
 800033e:	009b      	lsls	r3, r3, #2
 8000340:	4413      	add	r3, r2
 8000342:	009b      	lsls	r3, r3, #2
 8000344:	440b      	add	r3, r1
 8000346:	3308      	adds	r3, #8
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	6819      	ldr	r1, [r3, #0]
 800034c:	793b      	ldrb	r3, [r7, #4]
 800034e:	105b      	asrs	r3, r3, #1
 8000350:	f003 0203 	and.w	r2, r3, #3
 8000354:	79bb      	ldrb	r3, [r7, #6]
 8000356:	005b      	lsls	r3, r3, #1
 8000358:	fa02 f303 	lsl.w	r3, r2, r3
 800035c:	461c      	mov	r4, r3
 800035e:	79fa      	ldrb	r2, [r7, #7]
 8000360:	4807      	ldr	r0, [pc, #28]	; (8000380 <GPIO_Init+0x17c>)
 8000362:	4613      	mov	r3, r2
 8000364:	009b      	lsls	r3, r3, #2
 8000366:	4413      	add	r3, r2
 8000368:	009b      	lsls	r3, r3, #2
 800036a:	4403      	add	r3, r0
 800036c:	3308      	adds	r3, #8
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	ea41 0204 	orr.w	r2, r1, r4
 8000374:	601a      	str	r2, [r3, #0]
}
 8000376:	bf00      	nop
 8000378:	3708      	adds	r7, #8
 800037a:	46bd      	mov	sp, r7
 800037c:	bc90      	pop	{r4, r7}
 800037e:	4770      	bx	lr
 8000380:	20000000 	.word	0x20000000

08000384 <TIM_EnableClock>:
 {TIM4_CR1, TIM4_DIER, TIM4_SR, TIM4_EGR, TIM4_CNT, TIM4_PSC, TIM4_ARR},
 {TIM5_CR1, TIM5_DIER, TIM5_SR, TIM5_EGR, TIM5_CNT, TIM5_PSC, TIM5_ARR}
};

void TIM_EnableClock(unsigned char Id)
{
 8000384:	b480      	push	{r7}
 8000386:	b083      	sub	sp, #12
 8000388:	af00      	add	r7, sp, #0
 800038a:	4603      	mov	r3, r0
 800038c:	71fb      	strb	r3, [r7, #7]
	*RCC_APB1ENR |= (0x01 << (Id-2));
 800038e:	4b08      	ldr	r3, [pc, #32]	; (80003b0 <TIM_EnableClock+0x2c>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	79fa      	ldrb	r2, [r7, #7]
 8000394:	3a02      	subs	r2, #2
 8000396:	2101      	movs	r1, #1
 8000398:	fa01 f202 	lsl.w	r2, r1, r2
 800039c:	4611      	mov	r1, r2
 800039e:	4a04      	ldr	r2, [pc, #16]	; (80003b0 <TIM_EnableClock+0x2c>)
 80003a0:	430b      	orrs	r3, r1
 80003a2:	6013      	str	r3, [r2, #0]
}
 80003a4:	bf00      	nop
 80003a6:	370c      	adds	r7, #12
 80003a8:	46bd      	mov	sp, r7
 80003aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ae:	4770      	bx	lr
 80003b0:	40023840 	.word	0x40023840

080003b4 <TIM_Init>:

void TIM_Init(unsigned char Id, unsigned char CounterMode, unsigned int CounterValue, unsigned short Prescaler)
{
 80003b4:	b490      	push	{r4, r7}
 80003b6:	b082      	sub	sp, #8
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	603a      	str	r2, [r7, #0]
 80003bc:	461a      	mov	r2, r3
 80003be:	4603      	mov	r3, r0
 80003c0:	71fb      	strb	r3, [r7, #7]
 80003c2:	460b      	mov	r3, r1
 80003c4:	71bb      	strb	r3, [r7, #6]
 80003c6:	4613      	mov	r3, r2
 80003c8:	80bb      	strh	r3, [r7, #4]
	*LOOKUPTIM[Id-2][0] |= (0x01 << 7);
 80003ca:	79fb      	ldrb	r3, [r7, #7]
 80003cc:	1e9a      	subs	r2, r3, #2
 80003ce:	4925      	ldr	r1, [pc, #148]	; (8000464 <TIM_Init+0xb0>)
 80003d0:	4613      	mov	r3, r2
 80003d2:	00db      	lsls	r3, r3, #3
 80003d4:	1a9b      	subs	r3, r3, r2
 80003d6:	009b      	lsls	r3, r3, #2
 80003d8:	440b      	add	r3, r1
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	6819      	ldr	r1, [r3, #0]
 80003de:	79fb      	ldrb	r3, [r7, #7]
 80003e0:	1e9a      	subs	r2, r3, #2
 80003e2:	4820      	ldr	r0, [pc, #128]	; (8000464 <TIM_Init+0xb0>)
 80003e4:	4613      	mov	r3, r2
 80003e6:	00db      	lsls	r3, r3, #3
 80003e8:	1a9b      	subs	r3, r3, r2
 80003ea:	009b      	lsls	r3, r3, #2
 80003ec:	4403      	add	r3, r0
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	f041 0280 	orr.w	r2, r1, #128	; 0x80
 80003f4:	601a      	str	r2, [r3, #0]
    *LOOKUPTIM[Id-2][0] |= (CounterMode << 4);
 80003f6:	79fb      	ldrb	r3, [r7, #7]
 80003f8:	1e9a      	subs	r2, r3, #2
 80003fa:	491a      	ldr	r1, [pc, #104]	; (8000464 <TIM_Init+0xb0>)
 80003fc:	4613      	mov	r3, r2
 80003fe:	00db      	lsls	r3, r3, #3
 8000400:	1a9b      	subs	r3, r3, r2
 8000402:	009b      	lsls	r3, r3, #2
 8000404:	440b      	add	r3, r1
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	6819      	ldr	r1, [r3, #0]
 800040a:	79bb      	ldrb	r3, [r7, #6]
 800040c:	011b      	lsls	r3, r3, #4
 800040e:	461c      	mov	r4, r3
 8000410:	79fb      	ldrb	r3, [r7, #7]
 8000412:	1e9a      	subs	r2, r3, #2
 8000414:	4813      	ldr	r0, [pc, #76]	; (8000464 <TIM_Init+0xb0>)
 8000416:	4613      	mov	r3, r2
 8000418:	00db      	lsls	r3, r3, #3
 800041a:	1a9b      	subs	r3, r3, r2
 800041c:	009b      	lsls	r3, r3, #2
 800041e:	4403      	add	r3, r0
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	ea41 0204 	orr.w	r2, r1, r4
 8000426:	601a      	str	r2, [r3, #0]
    *LOOKUPTIM[Id-2][5]  = Prescaler;
 8000428:	79fb      	ldrb	r3, [r7, #7]
 800042a:	1e9a      	subs	r2, r3, #2
 800042c:	490d      	ldr	r1, [pc, #52]	; (8000464 <TIM_Init+0xb0>)
 800042e:	4613      	mov	r3, r2
 8000430:	00db      	lsls	r3, r3, #3
 8000432:	1a9b      	subs	r3, r3, r2
 8000434:	009b      	lsls	r3, r3, #2
 8000436:	440b      	add	r3, r1
 8000438:	3314      	adds	r3, #20
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	88ba      	ldrh	r2, [r7, #4]
 800043e:	601a      	str	r2, [r3, #0]
	*LOOKUPTIM[Id-2][6]  = CounterValue;
 8000440:	79fb      	ldrb	r3, [r7, #7]
 8000442:	1e9a      	subs	r2, r3, #2
 8000444:	4907      	ldr	r1, [pc, #28]	; (8000464 <TIM_Init+0xb0>)
 8000446:	4613      	mov	r3, r2
 8000448:	00db      	lsls	r3, r3, #3
 800044a:	1a9b      	subs	r3, r3, r2
 800044c:	009b      	lsls	r3, r3, #2
 800044e:	440b      	add	r3, r1
 8000450:	3318      	adds	r3, #24
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	683a      	ldr	r2, [r7, #0]
 8000456:	601a      	str	r2, [r3, #0]
}
 8000458:	bf00      	nop
 800045a:	3708      	adds	r7, #8
 800045c:	46bd      	mov	sp, r7
 800045e:	bc90      	pop	{r4, r7}
 8000460:	4770      	bx	lr
 8000462:	bf00      	nop
 8000464:	20000028 	.word	0x20000028

08000468 <TIM_Start>:

void TIM_Start(unsigned char Id)
{
 8000468:	b480      	push	{r7}
 800046a:	b083      	sub	sp, #12
 800046c:	af00      	add	r7, sp, #0
 800046e:	4603      	mov	r3, r0
 8000470:	71fb      	strb	r3, [r7, #7]
	*LOOKUPTIM[Id-2][1] |= (0x01 << 0);
 8000472:	79fb      	ldrb	r3, [r7, #7]
 8000474:	1e9a      	subs	r2, r3, #2
 8000476:	4919      	ldr	r1, [pc, #100]	; (80004dc <TIM_Start+0x74>)
 8000478:	4613      	mov	r3, r2
 800047a:	00db      	lsls	r3, r3, #3
 800047c:	1a9b      	subs	r3, r3, r2
 800047e:	009b      	lsls	r3, r3, #2
 8000480:	440b      	add	r3, r1
 8000482:	3304      	adds	r3, #4
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	6819      	ldr	r1, [r3, #0]
 8000488:	79fb      	ldrb	r3, [r7, #7]
 800048a:	1e9a      	subs	r2, r3, #2
 800048c:	4813      	ldr	r0, [pc, #76]	; (80004dc <TIM_Start+0x74>)
 800048e:	4613      	mov	r3, r2
 8000490:	00db      	lsls	r3, r3, #3
 8000492:	1a9b      	subs	r3, r3, r2
 8000494:	009b      	lsls	r3, r3, #2
 8000496:	4403      	add	r3, r0
 8000498:	3304      	adds	r3, #4
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	f041 0201 	orr.w	r2, r1, #1
 80004a0:	601a      	str	r2, [r3, #0]
	*LOOKUPTIM[Id-2][0] |= (0x01 << 0);
 80004a2:	79fb      	ldrb	r3, [r7, #7]
 80004a4:	1e9a      	subs	r2, r3, #2
 80004a6:	490d      	ldr	r1, [pc, #52]	; (80004dc <TIM_Start+0x74>)
 80004a8:	4613      	mov	r3, r2
 80004aa:	00db      	lsls	r3, r3, #3
 80004ac:	1a9b      	subs	r3, r3, r2
 80004ae:	009b      	lsls	r3, r3, #2
 80004b0:	440b      	add	r3, r1
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	6819      	ldr	r1, [r3, #0]
 80004b6:	79fb      	ldrb	r3, [r7, #7]
 80004b8:	1e9a      	subs	r2, r3, #2
 80004ba:	4808      	ldr	r0, [pc, #32]	; (80004dc <TIM_Start+0x74>)
 80004bc:	4613      	mov	r3, r2
 80004be:	00db      	lsls	r3, r3, #3
 80004c0:	1a9b      	subs	r3, r3, r2
 80004c2:	009b      	lsls	r3, r3, #2
 80004c4:	4403      	add	r3, r0
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	f041 0201 	orr.w	r2, r1, #1
 80004cc:	601a      	str	r2, [r3, #0]

}
 80004ce:	bf00      	nop
 80004d0:	370c      	adds	r7, #12
 80004d2:	46bd      	mov	sp, r7
 80004d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d8:	4770      	bx	lr
 80004da:	bf00      	nop
 80004dc:	20000028 	.word	0x20000028

080004e0 <TIM_CheckFlag>:
	*LOOKUPTIM[Id-2][1] &= ~(0x01 << 0);

}

unsigned char TIM_CheckFlag(unsigned char Id, unsigned char Flag)
{
 80004e0:	b480      	push	{r7}
 80004e2:	b083      	sub	sp, #12
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	4603      	mov	r3, r0
 80004e8:	460a      	mov	r2, r1
 80004ea:	71fb      	strb	r3, [r7, #7]
 80004ec:	4613      	mov	r3, r2
 80004ee:	71bb      	strb	r3, [r7, #6]
	return ((*LOOKUPTIM[Id-2][2]) & (0x01 << Flag));
 80004f0:	79fb      	ldrb	r3, [r7, #7]
 80004f2:	1e9a      	subs	r2, r3, #2
 80004f4:	490b      	ldr	r1, [pc, #44]	; (8000524 <TIM_CheckFlag+0x44>)
 80004f6:	4613      	mov	r3, r2
 80004f8:	00db      	lsls	r3, r3, #3
 80004fa:	1a9b      	subs	r3, r3, r2
 80004fc:	009b      	lsls	r3, r3, #2
 80004fe:	440b      	add	r3, r1
 8000500:	3308      	adds	r3, #8
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	b2da      	uxtb	r2, r3
 8000508:	79bb      	ldrb	r3, [r7, #6]
 800050a:	2101      	movs	r1, #1
 800050c:	fa01 f303 	lsl.w	r3, r1, r3
 8000510:	b2db      	uxtb	r3, r3
 8000512:	4013      	ands	r3, r2
 8000514:	b2db      	uxtb	r3, r3
}
 8000516:	4618      	mov	r0, r3
 8000518:	370c      	adds	r7, #12
 800051a:	46bd      	mov	sp, r7
 800051c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000520:	4770      	bx	lr
 8000522:	bf00      	nop
 8000524:	20000028 	.word	0x20000028

08000528 <TIM2_IRQHandler>:

void TIM2_IRQHandler(void)
{
 8000528:	b580      	push	{r7, lr}
 800052a:	af00      	add	r7, sp, #0
	TIM2_Callout();
 800052c:	f000 f820 	bl	8000570 <TIM2_Callout>
	*LOOKUPTIM[0][2] = 0x0000; //TIM2
 8000530:	4b02      	ldr	r3, [pc, #8]	; (800053c <TIM2_IRQHandler+0x14>)
 8000532:	689b      	ldr	r3, [r3, #8]
 8000534:	2200      	movs	r2, #0
 8000536:	601a      	str	r2, [r3, #0]
}
 8000538:	bf00      	nop
 800053a:	bd80      	pop	{r7, pc}
 800053c:	20000028 	.word	0x20000028

08000540 <NVIC_EnableTimerInterrupt>:
 */

#include "NVIC.h"

void NVIC_EnableTimerInterrupt(unsigned char TIM)
{
 8000540:	b480      	push	{r7}
 8000542:	b083      	sub	sp, #12
 8000544:	af00      	add	r7, sp, #0
 8000546:	4603      	mov	r3, r0
 8000548:	71fb      	strb	r3, [r7, #7]
	*NVIC_ISER0 |= (0x01 << (28 + (TIM - 2)));
 800054a:	4b08      	ldr	r3, [pc, #32]	; (800056c <NVIC_EnableTimerInterrupt+0x2c>)
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	79fa      	ldrb	r2, [r7, #7]
 8000550:	321a      	adds	r2, #26
 8000552:	2101      	movs	r1, #1
 8000554:	fa01 f202 	lsl.w	r2, r1, r2
 8000558:	4611      	mov	r1, r2
 800055a:	4a04      	ldr	r2, [pc, #16]	; (800056c <NVIC_EnableTimerInterrupt+0x2c>)
 800055c:	430b      	orrs	r3, r1
 800055e:	6013      	str	r3, [r2, #0]
}
 8000560:	bf00      	nop
 8000562:	370c      	adds	r7, #12
 8000564:	46bd      	mov	sp, r7
 8000566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800056a:	4770      	bx	lr
 800056c:	e000e100 	.word	0xe000e100

08000570 <TIM2_Callout>:
#include "NVIC.h"
#include "GPTIM.h"
#include "GPIO.h"

void TIM2_Callout(void)
{
 8000570:	b580      	push	{r7, lr}
 8000572:	af00      	add	r7, sp, #0
	if(TIM_CheckFlag(2, UIF))
 8000574:	2100      	movs	r1, #0
 8000576:	2002      	movs	r0, #2
 8000578:	f7ff ffb2 	bl	80004e0 <TIM_CheckFlag>
 800057c:	4603      	mov	r3, r0
 800057e:	2b00      	cmp	r3, #0
 8000580:	d005      	beq.n	800058e <TIM2_Callout+0x1e>
	{
		*GPIOA_ODR ^= 1 << 1;  // Toggle Led
 8000582:	4b04      	ldr	r3, [pc, #16]	; (8000594 <TIM2_Callout+0x24>)
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	4a03      	ldr	r2, [pc, #12]	; (8000594 <TIM2_Callout+0x24>)
 8000588:	f083 0302 	eor.w	r3, r3, #2
 800058c:	6013      	str	r3, [r2, #0]
	}
}
 800058e:	bf00      	nop
 8000590:	bd80      	pop	{r7, pc}
 8000592:	bf00      	nop
 8000594:	40020014 	.word	0x40020014

08000598 <main>:

int main(void)
{
 8000598:	b580      	push	{r7, lr}
 800059a:	af00      	add	r7, sp, #0
    GPIO_EnableClock(0);  // Enable GPIOA
 800059c:	2000      	movs	r0, #0
 800059e:	f7ff fe19 	bl	80001d4 <GPIO_EnableClock>
    TIM_EnableClock(2); // Enable TIM2
 80005a2:	2002      	movs	r0, #2
 80005a4:	f7ff feee 	bl	8000384 <TIM_EnableClock>

    GPIO_Init(0, 1, OUTPUT, PUSH_PULL);  // Led
 80005a8:	2300      	movs	r3, #0
 80005aa:	2201      	movs	r2, #1
 80005ac:	2101      	movs	r1, #1
 80005ae:	2000      	movs	r0, #0
 80005b0:	f7ff fe28 	bl	8000204 <GPIO_Init>
    TIM_Init(2, DOWNCOUNTER, 1000, 15999);
 80005b4:	f643 637f 	movw	r3, #15999	; 0x3e7f
 80005b8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80005bc:	2101      	movs	r1, #1
 80005be:	2002      	movs	r0, #2
 80005c0:	f7ff fef8 	bl	80003b4 <TIM_Init>

    NVIC_EnableTimerInterrupt(2);
 80005c4:	2002      	movs	r0, #2
 80005c6:	f7ff ffbb 	bl	8000540 <NVIC_EnableTimerInterrupt>

	TIM_Start(2);
 80005ca:	2002      	movs	r0, #2
 80005cc:	f7ff ff4c 	bl	8000468 <TIM_Start>

    while (1)
 80005d0:	e7fe      	b.n	80005d0 <main+0x38>
	...

080005d4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80005d4:	b480      	push	{r7}
 80005d6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80005d8:	4b06      	ldr	r3, [pc, #24]	; (80005f4 <SystemInit+0x20>)
 80005da:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80005de:	4a05      	ldr	r2, [pc, #20]	; (80005f4 <SystemInit+0x20>)
 80005e0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80005e4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80005e8:	bf00      	nop
 80005ea:	46bd      	mov	sp, r7
 80005ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f0:	4770      	bx	lr
 80005f2:	bf00      	nop
 80005f4:	e000ed00 	.word	0xe000ed00

080005f8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80005f8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000630 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80005fc:	480d      	ldr	r0, [pc, #52]	; (8000634 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80005fe:	490e      	ldr	r1, [pc, #56]	; (8000638 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000600:	4a0e      	ldr	r2, [pc, #56]	; (800063c <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000602:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000604:	e002      	b.n	800060c <LoopCopyDataInit>

08000606 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000606:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000608:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800060a:	3304      	adds	r3, #4

0800060c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800060c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800060e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000610:	d3f9      	bcc.n	8000606 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000612:	4a0b      	ldr	r2, [pc, #44]	; (8000640 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000614:	4c0b      	ldr	r4, [pc, #44]	; (8000644 <LoopFillZerobss+0x26>)
  movs r3, #0
 8000616:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000618:	e001      	b.n	800061e <LoopFillZerobss>

0800061a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800061a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800061c:	3204      	adds	r2, #4

0800061e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800061e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000620:	d3fb      	bcc.n	800061a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000622:	f7ff ffd7 	bl	80005d4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000626:	f000 f811 	bl	800064c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800062a:	f7ff ffb5 	bl	8000598 <main>
  bx  lr    
 800062e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000630:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000634:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000638:	20000098 	.word	0x20000098
  ldr r2, =_sidata
 800063c:	080006b4 	.word	0x080006b4
  ldr r2, =_sbss
 8000640:	20000098 	.word	0x20000098
  ldr r4, =_ebss
 8000644:	200000b4 	.word	0x200000b4

08000648 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000648:	e7fe      	b.n	8000648 <ADC_IRQHandler>
	...

0800064c <__libc_init_array>:
 800064c:	b570      	push	{r4, r5, r6, lr}
 800064e:	4d0d      	ldr	r5, [pc, #52]	; (8000684 <__libc_init_array+0x38>)
 8000650:	4c0d      	ldr	r4, [pc, #52]	; (8000688 <__libc_init_array+0x3c>)
 8000652:	1b64      	subs	r4, r4, r5
 8000654:	10a4      	asrs	r4, r4, #2
 8000656:	2600      	movs	r6, #0
 8000658:	42a6      	cmp	r6, r4
 800065a:	d109      	bne.n	8000670 <__libc_init_array+0x24>
 800065c:	4d0b      	ldr	r5, [pc, #44]	; (800068c <__libc_init_array+0x40>)
 800065e:	4c0c      	ldr	r4, [pc, #48]	; (8000690 <__libc_init_array+0x44>)
 8000660:	f000 f818 	bl	8000694 <_init>
 8000664:	1b64      	subs	r4, r4, r5
 8000666:	10a4      	asrs	r4, r4, #2
 8000668:	2600      	movs	r6, #0
 800066a:	42a6      	cmp	r6, r4
 800066c:	d105      	bne.n	800067a <__libc_init_array+0x2e>
 800066e:	bd70      	pop	{r4, r5, r6, pc}
 8000670:	f855 3b04 	ldr.w	r3, [r5], #4
 8000674:	4798      	blx	r3
 8000676:	3601      	adds	r6, #1
 8000678:	e7ee      	b.n	8000658 <__libc_init_array+0xc>
 800067a:	f855 3b04 	ldr.w	r3, [r5], #4
 800067e:	4798      	blx	r3
 8000680:	3601      	adds	r6, #1
 8000682:	e7f2      	b.n	800066a <__libc_init_array+0x1e>
 8000684:	080006ac 	.word	0x080006ac
 8000688:	080006ac 	.word	0x080006ac
 800068c:	080006ac 	.word	0x080006ac
 8000690:	080006b0 	.word	0x080006b0

08000694 <_init>:
 8000694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000696:	bf00      	nop
 8000698:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800069a:	bc08      	pop	{r3}
 800069c:	469e      	mov	lr, r3
 800069e:	4770      	bx	lr

080006a0 <_fini>:
 80006a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006a2:	bf00      	nop
 80006a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006a6:	bc08      	pop	{r3}
 80006a8:	469e      	mov	lr, r3
 80006aa:	4770      	bx	lr
